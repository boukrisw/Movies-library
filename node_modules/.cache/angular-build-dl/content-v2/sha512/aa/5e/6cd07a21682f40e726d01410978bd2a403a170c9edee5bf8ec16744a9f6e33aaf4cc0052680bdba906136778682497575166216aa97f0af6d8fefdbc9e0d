{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/account/account.component.ts","webpack:///src/app/account/account.component.html","webpack:///src/app/activity/activity.component.html","webpack:///src/app/activity/activity.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/detailsfilm/detailsfilm.component.html","webpack:///src/app/detailsfilm/detailsfilm.component.ts","webpack:///src/app/films/films.component.html","webpack:///src/app/films/films.component.ts","webpack:///src/app/navigationbar/navigationbar.component.html","webpack:///src/app/navigationbar/navigationbar.component.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/tmdb.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountComponent","selector","templateUrl","styleUrls","ActivityComponent","auth","tmdb","likes","ref","dislikes","comments","names","init","on","gotDatalikes","errorData","data","tabLikes","films","val","Object","map","elt","i","key","forEach","idu","once","snapshot","push","action","iduser","idFilm","date","console","log","res","userId","getMovie","parseInt","v","title","routes","path","component","AppRoutingModule","forRoot","imports","routingComponents","AppComponent","tmdbKey","AppModule","initializeApp","firebase","declarations","providers","bootstrap","DetailsfilmComponent","popularFilms","tabComments","gotDatacomments","k","comment","sort","compare","a","b","aS","split","bS","aDay","bDay","aTime","bTime","nb","tabDisLikes","connected","numChildren","currentdate","Date","getDate","getMonth","getFullYear","getHours","getMinutes","set","filmdetail","like","unlike","remove","FilmsComponent","Fname","Lname","mail","pwd","birthday","length","upComingFilms","gotDatadislikes","signup","RechercheTrouve","RechrcheResult","index","PopularFilms","results","NavigationbarComponent","email","password","searchQuery","login","logout","searchMovie","query","region","home","searchClick","AuthenticationService","afAuth","db","createUserWithEmailAndPassword","value","user","uid","mdp","nom","prenom","err","message","signInWithEmailAndPassword","signOut","providedIn","tmdbApi","ObjectToString","JSON","stringify","TmdbService","http","url","get","observe","params","api_key","apiKey","toPromise","options","body","UpComingFilms","environment","production","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"account\">account works!</div>\n ","<div class=\"activity\">\n    activity works!{{this.auth.userId}}\n\n\n    <div *ngFor=\"let act of this.getTable(); let i = index\">\n        <script>\n            this.film(act.idFilm)\n        </script>\n        {{act.action}} {{this.names[i]}} en {{act.date}} \n    </div>\n\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport {AuthenticationService} from '../services/authentication.service';\nimport {TmdbService} from '../services/tmdb.service';\n\n\n\n@Component({\n  selector: 'app-activity',\n  templateUrl: './activity.component.html',\n  styleUrls: ['./activity.component.scss']\n})\nexport class ActivityComponent {\n  likes = firebase.database().ref('/likes/');\n  dislikes = firebase.database().ref('/dislikes/');\n  comments = firebase.database().ref('/comments/');\n  static tabLikes=[]\n  names :string[]=[]\n  constructor(public auth: AuthenticationService ,public tmdb: TmdbService) {\n    this.init();\n  }\n\n  init(){\n    this.likes.on('value',this.gotDatalikes,this.errorData);\n    this.names =[]\n  }\n  \n  \n  gotDatalikes(data){\n    ActivityComponent.tabLikes=[]\n\n    //console.log('data',data.val())\n    let films = data.val();\n    if(films != null){\n      let keys = Object.keys(films);\n      keys.map( (elt,i) => {\n        let key = Object.keys(films[keys[i]]);\n        key.forEach((idu)=>{\n          firebase.database().ref('/likes/'+elt+'/'+idu+'/date').once('value').then(function(snapshot) {\n            ActivityComponent.tabLikes.push( {action : 'vous avez liker ',iduser:idu,idFilm : elt,date :snapshot.val()})\n          })\n        });\n      })\n    }\n  }\n  errorData(data){\n    console.log(data);\n  }\n\n\n  getTable(){\n    let res =[];\n    ActivityComponent.tabLikes.map( elt => {\n      if(elt.iduser == this.auth.userId+'') {\n        res.push(elt)\n      }\n    })\n    return res;\n  }\n\n  async film(id){\n    let v = (await this.tmdb.getMovie(parseInt(id))).title;\n    this.names.push(v);\n    return ;\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccountComponent } from './account/account.component';\nimport { FilmsComponent } from './films/films.component';\nimport { ActivityComponent } from './activity/activity.component';\nimport { DetailsfilmComponent } from './detailsfilm/detailsfilm.component';\n\nconst routes: Routes = [\n  {path: '' , component: FilmsComponent},\n  {path: 'account' , component: AccountComponent},\n  {path: 'activity' , component: ActivityComponent},\n  {path: 'details' , component: DetailsfilmComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\nexport const routingComponents = [AccountComponent,FilmsComponent,ActivityComponent,DetailsfilmComponent ]","import { Component } from '@angular/core';\n\nimport {TmdbService} from './services/tmdb.service';\nimport {environment} from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor(private tmdb: TmdbService) {\n    this.init();\n  }\n\n  async init() {\n    this.tmdb.init( environment.tmdbKey );\n  }\n}\n","\n<app-navigationbar></app-navigationbar>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {TmdbService} from './services/tmdb.service';\nimport { FilmsComponent } from './films/films.component';\nimport { NavigationbarComponent } from './navigationbar/navigationbar.component';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\n\n\nimport { environment } from '../environments/environment';\n\nimport {AccountComponent } from './account/account.component';\nimport { ActivityComponent } from './activity/activity.component';\nimport { DetailsfilmComponent } from './detailsfilm/detailsfilm.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FilmsComponent,\n    NavigationbarComponent,\n    AccountComponent,\n    ActivityComponent,\n    DetailsfilmComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase, 'project-544520034047'),\n    AngularFireAuthModule,\n    AngularFireDatabaseModule\n  ],\n  providers: [TmdbService, HttpClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"detailsfilm\" *ngIf=\"this.tmdb.filmdetail != null\">\n    <div>{{this.tmdb.filmdetail.title}}</div>\n    <img src=\"https://image.tmdb.org/t/p/w500/{{this.tmdb.filmdetail.poster_path}}\"/>\n    <div>{{this.tmdb.filmdetail.overview}}</div>\n\n    <table>\n        <tr>\n          <th class=\"like\">\n              <img (click)=\"like()\" class=\"small\"  src=\"../../assets/images/like.svg\"/>\n          </th>\n          <th class=\"dislike\">              \n              <img (click)=\"dislike()\" class=\"small\"  src=\"../../assets/images/dislike.svg\"/>\n          </th>\n          <th>              \n              <input style=\"width: 400px;\" placeholder=\"comment\" [(ngModel)]=\"this.tmdb.filmdetail.comment\">\n          </th>\n          <th>              \n              <button (click)=\"addComment()\">add</button>\n          </th>\n        </tr>\n        <tr>\n          <th> \n              {{getLikes(this.tmdb.filmdetail.id)}}\n          </th>\n          <th>             \n              {{getDisLikes(this.tmdb.filmdetail.id)}}\n          </th>\n        </tr>\n    </table>\n    Comments:\n    <table>\n        <tr *ngFor=\"let comment of this.getComments()\">\n            <div class=\"dialogbox\">\n                <div class=\"body\">\n                  <span class=\"tip tip-left\"></span>\n                  <div class=\"message\">\n                    <th>\n                        {{comment.comment}}\n                    </th>\n                    <th style=\"color: deepskyblue;\">\n                        {{comment.date}}\n                    </th>\n                  </div>\n                </div>\n              </div>\n            \n             \n        </tr>    \n    </table>\n\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport {TmdbService} from '../services/tmdb.service';\nimport {FilmsComponent} from '../films/films.component';\nimport {AuthenticationService} from '../services/authentication.service';\n\nimport * as firebase from 'firebase/app';\n\n@Component({\n  selector: 'app-detailsfilm',\n  templateUrl: './detailsfilm.component.html',\n  styleUrls: ['./detailsfilm.component.scss']\n})\nexport class DetailsfilmComponent implements OnInit {\n\n\n  comments = firebase.database().ref('/comments/'+this.tmdb.idFilm);\n  static tabComments:pair[] = [];\n\n\n  constructor(public tmdb: TmdbService, public auth: AuthenticationService) {\n    this.init();\n  }\n\n\n  async init(){\n    await this.tmdb.popularFilms();\n    DetailsfilmComponent.tabComments = [];\n    this.comments.on('value',this.gotDatacomments,this.errorData);\n  \n  }\n\n  gotDatacomments(data){\n    DetailsfilmComponent.tabComments = [];\n    \n    let comments = data.val();\n    if(comments != null){\n     // console.log('comment : ',comments);\n\n      let keys = Object.keys(comments);\n      keys.map( (elt,i) => {\n        \n        let k = keys[i];\n        //let key = Object.keys(comments[k]);\n        //FilmsComponent.tabLikes.push({id:elt,nb:key.length})\n\n   //     console.log('keys : ',keys[i]);\n     //   console.log('comments[k] : ',comments[k]);\n        comments[k].map(elt => {\n          //console.log('elt : ',elt.comment);\n          DetailsfilmComponent.tabComments.push({comment:elt.comment,date:elt.date})\n        })\n      })\n    }\n\n  }\n\n  errorData(data){\n    console.log(data);\n  }\n\n  getComments(){\n    let res =[];\n    DetailsfilmComponent.tabComments.map( elt => {\n        res.push(elt);\n    })\n    return res.sort(this.compare);\n  }\n\n  //07/06/2020 16:43\n  compare(a:pair, b:pair) {\n    let aS = a.date.split(' ')\n    let bS = b.date.split(' ')\n    \n    let aDay = aS[0].split('/')\n    let bDay = bS[0].split('/')\n\n    let aTime = aS[1].split(':')\n    let bTime = bS[1].split(':')\n\n    if (parseInt(aDay[2]) == parseInt(bDay[2])){\n      if (parseInt(aDay[1]) == parseInt(bDay[1])){\n        if (parseInt(aDay[0]) == parseInt(bDay[0])){\n          if (parseInt(aTime[0]) == parseInt(bTime[0])){\n            if (parseInt(aTime[1]) == parseInt(bTime[1])){\n              return 0;\n            }else if( (parseInt(aTime[1]) < parseInt(bTime[1]))){\n              return 1;\n            } \n          }else if( (parseInt(aTime[0]) < parseInt(bTime[0]))){\n            return 1;\n          } \n        }else if( (parseInt(aDay[0]) < parseInt(bDay[0]))){\n          return 1;\n        } \n      }else if( (parseInt(aDay[1]) < parseInt(bDay[1]))){\n        return 1;\n      }   \n    }else if( (parseInt(aDay[2]) < parseInt(bDay[2]))){\n      return 1;\n    }\n    return -1;\n  }\n\n  ngOnInit(): void {\n  }\n\n  getLikes(id: number){\n    let res =0;\n    FilmsComponent.tabLikes.map( elt => {\n      if(elt.id == id+'') {\n        res = elt.nb;\n      }\n    })\n    return res;\n  }\n\n  getDisLikes(id: number){\n    let res =0;\n    FilmsComponent.tabDisLikes.map( elt => {\n      if(elt.id == id+'') {\n        res = elt.nb;\n      }\n    })\n    return res;\n  }\n\n  addComment(){\n    if(this.auth.connected){\n      let i = 1\n      firebase.database().ref('comments/'+this.tmdb.idFilm+'/'+this.auth.userId).once('value').then(function(snapshot) {\n        i = i + snapshot.numChildren();\n      }).then(() => {\n        var currentdate = new Date();\n        let date = '';\n        \n        if(currentdate.getDate() < 10) date = date + '0';\n        date = date + currentdate.getDate() + \"/\"\n        \n        if(currentdate.getMonth()+1 < 10) date = date + '0';\n        date = date + (currentdate.getMonth()+1)  + \"/\" \n        \n        date = date + currentdate.getFullYear() + \" \"  \n        \n        if(currentdate.getHours() < 10) date = date + '0';\n        date = date + currentdate.getHours() + \":\"  \n        \n        if(currentdate.getMinutes() < 10) date = date + '0';\n        date = date + currentdate.getMinutes()\n        firebase.database().ref('comments/'+this.tmdb.idFilm+'/'+this.auth.userId+'/'+i).set({\n          date : date ,\n          comment : this.tmdb.filmdetail.comment\n        });\n        this.tmdb.filmdetail.comment =''\n      });\n    //  console.log(index);\n    //  console.log(this.tmdb.PopularFilms.results[index].comment); \n    }\n  }\n\n  like(){\n    let like,unlike;\n    //console.log('Like')\n    if(this.auth.connected){\n      firebase.database().ref('/likes/' +this.tmdb.idFilm+'/'+ this.auth.userId).once('value').then(function(snapshot) {\n        like = snapshot.numChildren();\n      }).then(() => {\n        if(like == 1){\n          firebase.database().ref('/likes/' +this.tmdb.idFilm+'/'+ this.auth.userId).remove();\n          //console.log('remove like')\n        }else if(like == 0){\n          var currentdate = new Date();\n          let date = '';\n          \n          if(currentdate.getDate() < 10) date = date + '0';\n          date = date + currentdate.getDate() + \"/\"\n          \n          if(currentdate.getMonth()+1 < 10) date = date + '0';\n          date = date + (currentdate.getMonth()+1)  + \"/\" \n          \n          date = date + currentdate.getFullYear() + \" \"  \n          \n          if(currentdate.getHours() < 10) date = date + '0';\n          date = date + currentdate.getHours() + \":\"  \n          \n          if(currentdate.getMinutes() < 10) date = date + '0';\n          date = date + currentdate.getMinutes() \n\n          firebase.database().ref('likes/'+this.tmdb.idFilm+'/'+this.auth.userId).set({\n            date : date \n          });\n          //console.log('add like')\n        }\n      });\n\n      firebase.database().ref('/dislikes/' +this.tmdb.idFilm+'/'+ this.auth.userId).once('value').then(function(snapshot) {\n        unlike = snapshot.numChildren();\n      }).then(() => {\n        if(unlike == 1){\n          firebase.database().ref('/dislikes/' +this.tmdb.idFilm+'/'+ this.auth.userId).remove();\n          //console.log('remove dislikes')\n        }\n      });\n    }\n  }\n\n  dislike(){\n    let like,unlike;\n\n    if(this.auth.connected){\n      firebase.database().ref('/dislikes/' +this.tmdb.idFilm+'/'+ this.auth.userId).once('value').then(function(snapshot) {\n        unlike = snapshot.numChildren();\n      }).then(() => {\n        if(unlike == 1){\n          firebase.database().ref('/dislikes/' +this.tmdb.idFilm+'/'+ this.auth.userId).remove();\n          //console.log('remove like')\n        }else if(unlike == 0){\n          var currentdate = new Date();\n          let date = '';\n          \n          if(currentdate.getDate() < 10) date = date + '0';\n          date = date + currentdate.getDate() + \"/\"\n          \n          if(currentdate.getMonth()+1 < 10) date = date + '0';\n          date = date + (currentdate.getMonth()+1)  + \"/\" \n          \n          date = date + currentdate.getFullYear() + \" \"  \n          \n          if(currentdate.getHours() < 10) date = date + '0';\n          date = date + currentdate.getHours() + \":\"  \n          \n          if(currentdate.getMinutes() < 10) date = date + '0';\n          date = date + currentdate.getMinutes()\n          firebase.database().ref('dislikes/'+this.tmdb.idFilm+'/'+this.auth.userId).set({\n            date : date \n          });\n          //console.log('add like')\n        }\n      });\n\n      firebase.database().ref('/likes/' +this.tmdb.idFilm+'/'+ this.auth.userId).once('value').then(function(snapshot) {\n        like = snapshot.numChildren();\n      }).then(() => {\n        if(like == 1){\n          firebase.database().ref('/likes/' +this.tmdb.idFilm+'/'+ this.auth.userId).remove();\n          //console.log('remove dislikes')\n        }\n      });\n    }\n  }\n}\nexport interface pair {\n  comment: string;\n  date: string;\n}","    <div class=\"film\" style=\"float:left;width:80%;\">\n      <div *ngIf=\"tmdb.RechercheTrouve\">\n        <div *ngIf=\"tmdb.RechrcheResult.results.length>0 ; else vide\">\n            <div class=\"card-container\">\n                <div *ngFor=\"let film of tmdb.RechrcheResult.results ; let index = index;\">\n                <a class=\"card\" >\n                    <table (click)=\"click(film.id)\" routerLink=\"/details\">\n                        <tr>\n                           <th>\n                              <img src=\"https://image.tmdb.org/t/p/w500/{{film.poster_path}}\"/>\n                           </th>\n                           <th>              \n                              <span>{{film.title}}</span>\n                           </th>\n                        </tr>\n                        <tr>\n                          <th>\n                             <img class=\"small\" src=\"../../assets/images/popularity.svg\"/>                    \n                          </th>\n                          <th>              \n                             <img class=\"small\" src=\"../../assets/images/date.svg\"/>              \n                          </th>\n                        </tr>\n                        <tr>\n                           <th>\n                              <span>{{film.popularity}}</span>\n                           </th>\n                           <th>              \n                              <span>{{film.release_date}}</span>\n                           </th>\n                        </tr>\n                    </table>\n                </a>\n                <table>\n                    <tr>\n                      <th class=\"like\">\n                          <img (click)=\"like(film.id)\" class=\"small\"  src=\"../../assets/images/like.svg\"/>\n                      </th>\n                      <th class=\"dislike\">              \n                          <img (click)=\"dislike(film.id)\" class=\"small\"  src=\"../../assets/images/dislike.svg\"/>\n                      </th>\n                      <th>              \n                          <input placeholder=\"comment\" [(ngModel)]=\"film.comment\">\n                      </th>\n                      <th>              \n                          <button (click)=\"addCommentSearch(index)\">add</button>\n                      </th>\n                    </tr>\n                    <tr>\n                      <th>\n                          {{getLikes(film.id)}}\n                      </th>\n                      <th>             \n                          {{getDisLikes(film.id)}}\n                      </th>\n                    </tr>\n                </table>\n                  </div>\n            </div>\n        </div>\n        <ng-template #vide>\n            <b>No results</b>\n        </ng-template>\n      </div>\n    \n      <div *ngIf=\"!tmdb.RechercheTrouve && tmdb.PopularFilms!=null\">\n        <div class=\"card-container\">\n            <div *ngFor=\"let film of tmdb.PopularFilms.results ; let index = index;\">\n            <a  class=\"card\">\n              <table (click)=\"click(film.id)\" routerLink=\"/details\" >\n                  <tr>\n                     <th>\n                        <img src=\"https://image.tmdb.org/t/p/w500/{{film.poster_path}}\"/>\n                     </th>\n                     <th>              \n                        <span>{{film.title}}</span>\n                     </th>\n                  </tr>\n                  <tr>\n                    <th>\n                       <img class=\"small\" src=\"../../assets/images/popularity.svg\"/>                    \n                    </th>\n                    <th>              \n                       <img class=\"small\" src=\"../../assets/images/date.svg\"/>              \n                    </th>\n                  </tr>\n                  <tr>\n                     <th>\n                        <span>{{film.popularity}}</span>\n                     </th>\n                     <th>              \n                        <span>{{film.release_date}}</span>\n                     </th>\n                  </tr>\n              </table>\n            </a>\n            <table>\n              <tr>\n                <th class=\"like\">\n                    <img (click)=\"like(film.id)\" class=\"small\"  src=\"../../assets/images/like.svg\"/>\n                </th>\n                <th class=\"dislike\">              \n                    <img (click)=\"dislike(film.id)\" class=\"small\"  src=\"../../assets/images/dislike.svg\"/>\n                </th>\n                <th>              \n                    <input placeholder=\"comment\" [(ngModel)]=\"film.comment\">\n                </th>\n                <th>              \n                    <button (click)=\"addComment(index)\">add</button>\n                </th>\n              </tr>\n              <tr>\n                <th> \n                    {{getLikes(film.id)}}\n                </th>\n                <th>             \n                    {{getDisLikes(film.id)}}\n                </th>\n              </tr>\n          </table>\n            </div>\n        </div>\n      </div>    \n    </div>\n\n    <div class=\"infos\" style=\"float:left;width:20%;\">\n        <div *ngIf=\"this.auth.connected; else elseBlock\">\n            <div>\n                Up Coming Films :\n            </div>\n            <table>\n                <tr *ngFor=\"let film of tmdb.UpComingFilms.results ; let i = index;\" (click)=\"click(film.id)\" routerLink=\"/details\">\n                        <th>\n                            <img class=\"UpComingFilm\" src=\"https://image.tmdb.org/t/p/w500/{{film.poster_path}}\"/>\n                        </th>\n                        <th>\n                            {{film.title}}\n                        </th>\n                </tr>\n            </table>\n\n        </div>\n        <ng-template #elseBlock>\n            <table>        \n                <tr>\n                    Create an account.<br/>\n                    It takes 2 secondes!!!\n                </tr>\n                <tr>\n                    <th>\n                        <input placeholder=\"First name\" [(ngModel)]=\"Fname\">\n                    </th>\n                </tr>\n                <tr>\n                    <th>\n                        <input placeholder=\"Last name\" [(ngModel)]=\"Lname\">\n                    </th>\n                </tr>\n                <tr>\n                    <th>\n                        <input placeholder=\"Email\" [(ngModel)]=\"mail\">\n                    </th>\n                </tr>\n                <tr>\n                    <th>\n                        <input type=\"password\" placeholder=\"Password\" [(ngModel)]=\"pwd\">\n                    </th>\n                </tr>\n                <tr>\n                    <th>\n                        <input placeholder=\"Birthday DD/MM/YYYY\" [(ngModel)]=\"birthday\">\n                    </th>\n                </tr>\n                <tr>\n                    <th>\n                        <button (click)=\"CreateAccount()\">Sign Up</button>\n                    </th>\n                </tr>\n            </table>\n        </ng-template>\n    </div>    \n\n","import { Component, OnInit } from '@angular/core';\nimport {TmdbService} from '../services/tmdb.service';\nimport {AuthenticationService} from '../services/authentication.service';\n\n\nimport { environment } from '../../environments/environment';\nimport * as firebase from 'firebase/app';\n \n//firebase.initializeApp(environment.firebase);\n\n@Component({\n  selector: 'app-films',\n  templateUrl: './films.component.html',\n  styleUrls: ['./films.component.scss']\n})\nexport class FilmsComponent implements OnInit {\n\n\n  Fname:string = '';\n  Lname:string = '';\n  mail:string = '';\n  pwd:string = '';\n  birthday:string = '';\n\n // database = firebase.database;\n  \n  likes = firebase.database().ref('/likes/');\n  dislikes = firebase.database().ref('/dislikes/');\n\n  static tabLikes : pair[] = [];\n  static tabDisLikes : pair[] = [];\n  \n  \n\n  constructor(public tmdb: TmdbService, public auth: AuthenticationService) { \n    this.init();\n  }\n  \n  gotDatalikes(data){\n    FilmsComponent.tabLikes = [];\n    let films = data.val();\n    if(films != null){\n      let keys = Object.keys(films);\n      keys.map( (elt,i) => {\n        let k = keys[i];\n        let key = Object.keys(films[k]);\n        FilmsComponent.tabLikes.push({id:elt,nb:key.length})\n      })\n    }\n  }\n\n  gotDatadislikes(data){\n    FilmsComponent.tabDisLikes = [];\n    let films = data.val();\n    if(films !=null){\n      let keys = Object.keys(films);\n      keys.map( (elt,i) => {\n        let k = keys[i];\n        let key = Object.keys(films[k]);\n        FilmsComponent.tabDisLikes.push({id:elt,nb:key.length})\n      })\n    }\n    //console.log('this.tabdisLikes',FilmsComponent.tabDisLikes[0]);\n  }\n\n\n  errorData(data){\n    console.log(data);\n  }\n\n  ngOnInit(): void {\n  }\n\n  async init(){\n    await this.tmdb.popularFilms();\n    await this.tmdb.upComingFilms();\n\n    FilmsComponent.tabLikes = [];\n\n    this.likes.on('value',this.gotDatalikes,this.errorData);\n    this.dislikes.on('value',this.gotDatadislikes,this.errorData);\n\n    this.Fname = '';\n    this.Lname = '';\n    this.mail = '';\n    this.pwd = '';\n    this.birthday = '';\n  }\n\n  CreateAccount(){\n    this.auth.signup(this.mail,this.pwd,this.Fname,this.Lname,this.birthday);\n    this.Fname =''\n    this.Lname =''\n    this.mail=''\n    this.pwd=''\n    this.birthday=''\n    this.tmdb.RechercheTrouve = false;\n    this.tmdb.RechrcheResult = null;\n  }\n\n  async click(id : number){\n    this.tmdb.idFilm = id;\n    this.tmdb.filmdetail = (await this.tmdb.getMovie(id));\n  }\n\n\n  like(id : number){\n    let like,unlike;\n    //console.log('Like')\n    if(this.auth.connected){\n      firebase.database().ref('/likes/' +id+'/'+ this.auth.userId).once('value').then(function(snapshot) {\n        like = snapshot.numChildren();\n      }).then(() => {\n        if(like == 1){\n          firebase.database().ref('/likes/' +id+'/'+ this.auth.userId).remove();\n          //console.log('remove like')\n        }else if(like == 0){\n          var currentdate = new Date();\n          let date = '';\n          \n          if(currentdate.getDate() < 10) date = date + '0';\n          date = date + currentdate.getDate() + \"/\"\n          \n          if(currentdate.getMonth()+1 < 10) date = date + '0';\n          date = date + (currentdate.getMonth()+1)  + \"/\" \n          \n          date = date + currentdate.getFullYear() + \" \"  \n          \n          if(currentdate.getHours() < 10) date = date + '0';\n          date = date + currentdate.getHours() + \":\"  \n          \n          if(currentdate.getMinutes() < 10) date = date + '0';\n          date = date + currentdate.getMinutes() \n\n          firebase.database().ref('likes/'+id+'/'+this.auth.userId).set({\n            date : date \n          });\n          //console.log('add like')\n        }\n      });\n\n      firebase.database().ref('/dislikes/' +id+'/'+ this.auth.userId).once('value').then(function(snapshot) {\n        unlike = snapshot.numChildren();\n      }).then(() => {\n        if(unlike == 1){\n          firebase.database().ref('/dislikes/' +id+'/'+ this.auth.userId).remove();\n          //console.log('remove dislikes')\n        }\n      });\n    }\n  }\n\n  dislike(id : number){\n    let like,unlike;\n\n    if(this.auth.connected){\n      firebase.database().ref('/dislikes/' +id+'/'+ this.auth.userId).once('value').then(function(snapshot) {\n        unlike = snapshot.numChildren();\n      }).then(() => {\n        if(unlike == 1){\n          firebase.database().ref('/dislikes/' +id+'/'+ this.auth.userId).remove();\n          //console.log('remove like')\n        }else if(unlike == 0){\n          var currentdate = new Date();\n          let date = '';\n          \n          if(currentdate.getDate() < 10) date = date + '0';\n          date = date + currentdate.getDate() + \"/\"\n          \n          if(currentdate.getMonth()+1 < 10) date = date + '0';\n          date = date + (currentdate.getMonth()+1)  + \"/\" \n          \n          date = date + currentdate.getFullYear() + \" \"  \n          \n          if(currentdate.getHours() < 10) date = date + '0';\n          date = date + currentdate.getHours() + \":\"  \n          \n          if(currentdate.getMinutes() < 10) date = date + '0';\n          date = date + currentdate.getMinutes()\n          firebase.database().ref('dislikes/'+id+'/'+this.auth.userId).set({\n            date : date \n          });\n          //console.log('add like')\n        }\n      });\n\n      firebase.database().ref('/likes/' +id+'/'+ this.auth.userId).once('value').then(function(snapshot) {\n        like = snapshot.numChildren();\n      }).then(() => {\n        if(like == 1){\n          firebase.database().ref('/likes/' +id+'/'+ this.auth.userId).remove();\n          //console.log('remove dislikes')\n        }\n      });\n    }\n  }\n\n  getLikes(id: number){\n    let res =0;\n    FilmsComponent.tabLikes.map( elt => {\n      if(elt.id == id+'') {\n        res = elt.nb;\n      }\n    })\n    return res;\n  }\n\n  getDisLikes(id: number){\n    let res =0;\n    FilmsComponent.tabDisLikes.map( elt => {\n      if(elt.id == id+'') {\n        res = elt.nb;\n      }\n    })\n    return res;\n  }\n  addComment(index){\n    if(this.auth.connected){\n      let i = 1\n      firebase.database().ref('comments/'+this.tmdb.PopularFilms.results[index].id+'/'+this.auth.userId).once('value').then(function(snapshot) {\n        i = i + snapshot.numChildren();\n      }).then(() => {\n        var currentdate = new Date();\n        let date = '';\n        \n        if(currentdate.getDate() < 10) date = date + '0';\n        date = date + currentdate.getDate() + \"/\"\n        \n        if(currentdate.getMonth()+1 < 10) date = date + '0';\n        date = date + (currentdate.getMonth()+1)  + \"/\" \n        \n        date = date + currentdate.getFullYear() + \" \"  \n        \n        if(currentdate.getHours() < 10) date = date + '0';\n        date = date + currentdate.getHours() + \":\"  \n        \n        if(currentdate.getMinutes() < 10) date = date + '0';\n        date = date + currentdate.getMinutes()\n        firebase.database().ref('comments/'+this.tmdb.PopularFilms.results[index].id+'/'+this.auth.userId+'/'+i).set({\n          date : date ,\n          comment : this.tmdb.PopularFilms.results[index].comment\n        });\n        this.tmdb.PopularFilms.results[index].comment =''\n      });\n    }\n  }\n\n  addCommentSearch(index){\n    if(this.auth.connected){\n      let i = 1\n      firebase.database().ref('comments/'+this.tmdb.RechrcheResult.results[index].id+'/'+this.auth.userId).once('value').then(function(snapshot) {\n        i = i + snapshot.numChildren();\n      }).then(() => {\n        var currentdate = new Date();\n        let date = '';\n        \n        if(currentdate.getDate() < 10) date = date + '0';\n        date = date + currentdate.getDate() + \"/\"\n        \n        if(currentdate.getMonth()+1 < 10) date = date + '0';\n        date = date + (currentdate.getMonth()+1)  + \"/\" \n        \n        date = date + currentdate.getFullYear() + \" \"  \n        \n        if(currentdate.getHours() < 10) date = date + '0';\n        date = date + currentdate.getHours() + \":\"  \n        \n        if(currentdate.getMinutes() < 10) date = date + '0';\n        date = date + currentdate.getMinutes()\n        firebase.database().ref('comments/'+this.tmdb.RechrcheResult.results[index].id+'/'+this.auth.userId+'/'+i).set({\n          date : date ,\n          comment : this.tmdb.RechrcheResult.results[index].comment\n        });\n        this.tmdb.RechrcheResult.results[index].comment =''\n      });\n    }\n  }\n}\nexport interface pair {\n  id: string;\n  nb: number;\n}","<div class=\"toolbar\" role=\"banner\">\n    <img\n      (click)=\"home()\"\n      routerLink=\"/\"\n      title=\"home\" \n      width=\"40\"\n      src=\"../../assets/images/home.svg\"\n    />\n\n    <div class=\"spacer\"></div>\n\n    <div class=\"recherche\">\n        <table>\n            <tr>\n                <th>\n                    <input placeholder=\"Search a Movie\" [(ngModel)]=\"searchQuery\">\n                </th>\n                <th>\n                    <button routerLink=\"/\" (click)=\"searchClick()\">search</button>\n                </th>\n            </tr>\n        </table>\n    </div>\n\n    <div class=\"spacer\"></div>\n    <table *ngIf=\"!this.auth.connected ; else connected\">\n        <tr>\n            <th>\n                <input placeholder=\"E-mail\" [(ngModel)]=\"email\">\n            </th>\n            <th>\n                <input type=\"password\" placeholder=\"password\" [(ngModel)]=\"password\">\n            </th>\n            <th>\n                <button (click)=\"login()\">Log In</button>\n            </th>\n        </tr>\n    </table>\n    <ng-template #connected>\n            <ul>\n                <!--<li><a routerLink=\"/activity\">Activity Log</a></li>-->\n                <!--<li><a routerLink=\"/account\">Account</a></li>-->\n                <li style=\"cursor: pointer;\" routerLink=\"/\" class=\"logout\" (click)=\"logout()\"><a>Log out</a></li>\n            </ul>\n    </ng-template>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport {TmdbService} from '../services/tmdb.service';\nimport {AuthenticationService} from '../services/authentication.service';\n\n\n@Component({\n  selector: 'app-navigationbar',\n  templateUrl: './navigationbar.component.html',\n  styleUrls: ['./navigationbar.component.scss']\n})\nexport class NavigationbarComponent implements OnInit {\n  email:string ='';\n  password:string ='';\n\n  searchQuery:string = '';\n\n\n  constructor(public tmdb: TmdbService, public auth: AuthenticationService) { }\n\n  ngOnInit(): void {\n  }\n\n  home(){\n    this.tmdb.RechercheTrouve = false;\n    this.tmdb.RechrcheResult = null;\n  }\n\n  login(){\n    this.auth.login(this.email,this.password);\n    this.email ='';\n    this.password ='';\n    this.tmdb.RechercheTrouve = false;\n    this.tmdb.RechrcheResult = null;\n  }\n\n  logout(){\n    this.auth.logout();\n    this.tmdb.RechercheTrouve = false;\n    this.tmdb.RechrcheResult = null;\n  }\n  \n  async searchClick() {\n    if(this.searchQuery != '') await this.tmdb.searchMovie({query : this.searchQuery, region:'FR'});\n    this.searchQuery = '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabase } from '@angular/fire/database';\n\n\nimport { environment } from '../../environments/environment';\nimport * as firebase from 'firebase/app';\n\nfirebase.initializeApp(environment.firebase);\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  public userId;\n  connected:boolean =false;\n\n  //listLikes //: FirebaseListObservable = [];\n\n  constructor(public afAuth: AngularFireAuth,public db: AngularFireDatabase) {\n    //this.userId.subscribe();\n    //db.list<Object>('likes').valueChanges().subscribe(console.log);\n  }\n\n\n\n  signup(email: string, password: string,Fname: string,Lname: string,birthday: string) {\n    this.afAuth.createUserWithEmailAndPassword(email, password)\n      .then(value => {\n        this.connected = true;\n        this.userId = value.user.uid\n       \n        /*Add user to DataBase! */\n        firebase.database().ref('users/'+value.user.uid).set({\n           email : email , \n           mdp :password , \n           nom:Lname,\n           prenom:Fname,\n           birthday:birthday\n        });\n      })\n      .catch(err => {\n        console.log('Something went wrong:',err.message);\n      });    \n  }\n\n  login(email: string, password: string) {\n    this.afAuth.signInWithEmailAndPassword(email, password)\n      .then(value => {\n        this.connected = true;\n        this.userId = value.user.uid\n        console.log('Nice, it worked!');\n      })\n      .catch(err => {\n        console.log('Something went wrong:',err.message);\n      });\n  }\n\n  logout() {\n    this.afAuth.signOut();\n    this.connected = false;\n  }\n\n  /*getlikes(){\n    console.log('fuck ',this.likes)\n    \n  }*/\n}\n\n\n\nexport interface pair {\n  id: string;\n  nb: number;\n}\n/*        Get user infos!\nfirebase.database().ref('/users/' + this.userId).once('value').then(function(snapshot) {\n  var username = (snapshot.val() && snapshot.val().username) || 'Anonymous';\n  console.log(snapshot.val(),snapshot.val().mdp );\n});\n*/","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {SearchMovieQuery, SearchMovieResponse} from '../tmdb-data/searchMovie';\nimport {MovieQuery, MovieResponse} from '../tmdb-data/Movie';\n\nconst tmdbApi = 'https://api.themoviedb.org/3';\n\nfunction ObjectToString(data?: object): {[key: string]: string} {\n  const res = {};\n  for (const k of Object.keys(data || {}) ) {\n    const v = data[k];\n    res[k] = typeof v === 'string' ? v : JSON.stringify(v);\n  }\n  return res;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TmdbService {\n  PopularFilms:SearchMovieResponse ;\n\n  UpComingFilms:SearchMovieResponse ;\n\n  RechrcheResult:SearchMovieResponse;  \n  RechercheTrouve:boolean =false;\n\n  idFilm;\n  filmdetail;\n\n  private apiKey: string;\n\n  private async get<T>(url: string, data: object): Promise<HttpResponse<T>> {\n    return this.http.get<T>( url, {\n      observe: 'response',\n      params: {...ObjectToString(data), api_key: this.apiKey}\n    }).toPromise();\n  }\n\n  constructor(private http: HttpClient) {}\n\n  init(key: string): this {\n    this.apiKey = key;\n    return this;\n  }\n\n  // _______________________________________________________________________________________________________________________________________\n  // Movies ________________________________________________________________________________________________________________________________\n  // _______________________________________________________________________________________________________________________________________\n  async getMovie(id: number, options?: MovieQuery): Promise<MovieResponse> {\n    const url = `${tmdbApi}/movie/${id}`;\n    const res = await this.get<MovieResponse>(url, options);\n    return res.body;\n  }\n\n  async searchMovie(query: SearchMovieQuery) {\n    const url = `${tmdbApi}/search/movie`;\n    const res = await this.get<SearchMovieResponse>(url, query);\n    this.RechercheTrouve=true;\n    this.RechrcheResult = res.body;\n  }\n\n  async popularFilms(options?: MovieQuery){\n    const url = tmdbApi+'/movie/popular?api_key=200b64b2e13e6f6e004f310c0c0d8697&language=en-US&page=1';\n    const res = await this.get<SearchMovieResponse>(url, options);\n    this.PopularFilms = res.body;\n  }\n  \n  async upComingFilms(options?: MovieQuery) {\n    const url = 'https://api.themoviedb.org/3/movie/upcoming?api_key=200b64b2e13e6f6e004f310c0c0d8697&language=en-US&page=1';\n    const res = await this.get<SearchMovieResponse>(url, options);\n    this.UpComingFilms = res.body;\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  tmdbKey: '200b64b2e13e6f6e004f310c0c0d8697',\n  firebase: {\n    apiKey: \"AIzaSyAS2ieIOey-XJfPyF6bTkvJ1b0nR52MEtY\",\n    authDomain: \"movies-lib.firebaseapp.com\",\n    databaseURL: \"https://movies-lib.firebaseio.com\",\n    projectId: \"movies-lib\",\n    storageBucket: \"movies-lib.appspot.com\",\n    messagingSenderId: \"544520034047\",\n    appId: \"1:544520034047:web:6a9f212c2b66596a74deca\",\n    measurementId: \"G-492W764JH4\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}